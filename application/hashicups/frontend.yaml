---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: frontend
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend
automountServiceAccountToken: true
---
apiVersion: consul.hashicorp.com/v1alpha1
kind: ServiceDefaults
metadata:
  name: frontend
spec:
  protocol: "http"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
    tags.datadoghq.com/service: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        tags.datadoghq.com/service: frontend
      annotations:
        admission.datadoghq.com/enabled: "true"
        ad.datadoghq.com/envoy-sidecar.tags: '{"service": "envoy-proxy"}'
        ad.datadoghq.com/envoy-sidecar.checks: |
          {
            "envoy": {
              "instances": [{"openmetrics_endpoint": "http://%%host%%:20200/metrics"}]
            }
          }
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/transparent-proxy-exclude-outbound-ports: "8125,8126"
    spec:
      serviceAccountName: frontend
      containers:
        - name: frontend
          image: hashicorpdemoapp/frontend:v1.0.2
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NEXT_PUBLIC_PUBLIC_API_URL
              value: "/"